ext.GROUP_ID = 'com.github.ginvavilon.traghentto'
ext.VERSION = '0.5.0'
ext.REPOSITORY_URL = 'https://github.com/GinVavilon/traghetto-source'
ext.VCS_URL = 'https://github.com/GinVavilon/traghetto-source.git'
ext.LICENSES = ['Apache-2.0']
ext.REPOSITOTY_NAME = 'Traghetto Source'
ext.DESCRIPTION = 'Interfaces for join sources of fiiles as files sytem, zip, http'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.github.ginvavilon:android-eclipse:0.9.+'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'org.eclipse.jgit:org.eclipse.jgit:4.2.0.+'
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.github.ginvavilon:android-eclipse:0.9.+'
    }
}

allprojects {
    repositories {
        jcenter()
        mavenLocal()
    }
        
}

subprojects{
    afterEvaluate { project ->
        if (project.tasks.findByName('testClasses')) {
                configurations {
                testOutput.extendsFrom (testCompile)
            }
    
            task jarTest (type: Jar, dependsOn: testClasses) {
                from sourceSets.test.output
                classifier = 'test'
            }

            artifacts {
                testOutput jarTest
            }            
        }
        
   			       
	 
    	if (project.hasProperty('eclipse')) {
			project.eclipse.project {
	 			natures 'org.eclipse.buildship.core.gradleprojectnature'
    			buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
			}	
    	}
        
    }

}

def updatePom(def pom, def artifactName, def artifactDescription){ 
    pom.withXml {
        asNode().children().last() + {
        resolveStrategy = Closure.DELEGATE_FIRST
            name artifactName
            description artifactDescription
            inceptionYear '2018'
            url REPOSITORY_URL
            scm {
                url REPOSITORY_URL
            }
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/license/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            developers {
                developer {
                    id 'ginVavilon'
                    name 'Vladimir Baraznovsky'
                    email 'ginVavilon@gmail.com'
                }
            }
        }
    }
}


def applyJavaPublishing(def project, def artifact,def name = NAME, def description = DESCRIPTION){
   
    project.with {
       
        apply plugin: 'maven-publish'
        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.java.srcDirs
        }
        
        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier 'javadoc'
            from javadoc.destinationDir
        }

        artifacts {
            archives jar
            archives sourcesJar
            archives javadocJar
        }
        configurePublishing(project,artifact,artifact,name,description,[project.sourcesJar,project.javadocJar]) 
    }

}

def configurePublishing(def project,def publishName, def artifact, def name = NAME, def description = DESCRIPTION,def archives = []){
   
    project.with {
       
        publishing {
            publications {
                "$publishName"(MavenPublication) {
                    from components.java
                    groupId GROUP_ID
                    artifactId artifact
                    version VERSION
                    artifacts = archives 
                    updatePom(pom, name, description)
                }
            }
        }
    }

}

